[
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2021-04-20T07:34:51.808Z",
        "before": [
          {
            "result": {
              "duration": 6523000000,
              "status": "passed"
            },
            "match": {
              "location": "stepDefinitions.FlightStepDefs.setUp()"
            }
          }
        ],
        "line": 14,
        "name": "Verify flight booking for users",
        "description": "",
        "id": "this-feature-will-validate-flight-booking-functionality;verify-flight-booking-for-users;;2",
        "after": [
          {
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/JPEG",
                "name": "failedScn"
              }
            ],
            "result": {
              "duration": 902000000,
              "status": "passed"
            },
            "match": {
              "location": "stepDefinitions.FlightStepDefs.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "line": 5,
            "name": "User navigates to flight booking application",
            "match": {
              "location": "stepDefinitions.FlightStepDefs.user_navigates_to_flight_booking_application()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 443000000,
              "status": "passed"
            },
            "line": 6,
            "name": "user selects \"Paris\" and \"Rome\" city",
            "match": {
              "arguments": [
                {
                  "val": "\"Paris\"",
                  "offset": 13
                },
                {
                  "val": "\"Rome\"",
                  "offset": 25
                }
              ],
              "location": "stepDefinitions.FlightStepDefs.userFromAndToCity(java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 496000000,
              "status": "passed"
            },
            "line": 7,
            "name": "click on Find Flights button",
            "match": {
              "location": "stepDefinitions.FlightStepDefs.clickOnFindFlightsButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 78000000,
              "status": "passed"
            },
            "line": 8,
            "name": "user choose flight to reserve ticket",
            "match": {
              "location": "stepDefinitions.FlightStepDefs.userChooseFlightToReserveTicket()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator \u0027By.id: inputName\u0027 (tried for 15 second(s) with 500 milliseconds interval)\r\n\tat org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:95)\r\n\tat org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:272)\r\n\tat Pages.UserDetailsPage.enterFirstName(UserDetailsPage.java:50)\r\n\tat stepDefinitions.FlightStepDefs.userEntersAllPassengerDetailsAndClicksOnPurchaseFlightButton(FlightStepDefs.java:79)\r\n\tat ✽.user enters all passenger details(file:///C:/FlightProjectAutomation/FlightBooking/src/test/resources/features/Flight.feature:9)\r\nCaused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"#inputName\"}\n  (Session info: chrome\u003d90.0.4430.72)\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.141.0\u0027, revision: \u00272ecb7d9a\u0027, time: \u00272018-10-31T20:09:30\u0027\nSystem info: host: \u0027DESKTOP-UM24P9K\u0027, ip: \u0027192.168.0.5\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_271\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 90.0.4430.72, chrome: {chromedriverVersion: 89.0.4389.23 (61b08ee2c5002..., userDataDir: C:\\Users\\Admin\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:51623}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}\nSession ID: 0e7ebba8fb963f2e5b4de568eded8fca\n*** Element info: {Using\u003did, value\u003dinputName}\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:372)\r\n\tat org.openqa.selenium.By$ById.findElement(By.java:188)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)\r\n\tat org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)\r\n\tat org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)\r\n\tat com.sun.proxy.$Proxy21.isDisplayed(Unknown Source)\r\n\tat org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:314)\r\n\tat org.openqa.selenium.support.ui.ExpectedConditions.access$000(ExpectedConditions.java:43)\r\n\tat org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:300)\r\n\tat org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:297)\r\n\tat org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:249)\r\n\tat Pages.UserDetailsPage.enterFirstName(UserDetailsPage.java:50)\r\n\tat stepDefinitions.FlightStepDefs.userEntersAllPassengerDetailsAndClicksOnPurchaseFlightButton(FlightStepDefs.java:79)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat io.cucumber.java.Invoker.doInvoke(Invoker.java:66)\r\n\tat io.cucumber.java.Invoker.invoke(Invoker.java:24)\r\n\tat io.cucumber.java.AbstractGlueDefinition.invokeMethod(AbstractGlueDefinition.java:47)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:29)\r\n\tat io.cucumber.core.runner.CoreStepDefinition.execute(CoreStepDefinition.java:66)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.ExecutionMode$1.execute(ExecutionMode.java:10)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:92)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:64)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:51)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:104)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:71)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:151)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:135)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:27)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:199)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:90)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:234)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)\r\n",
              "duration": 30683000000,
              "status": "failed"
            },
            "line": 9,
            "name": "user enters all passenger details",
            "match": {
              "location": "stepDefinitions.FlightStepDefs.userEntersAllPassengerDetailsAndClicksOnPurchaseFlightButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "clicks on Purchase Flight button",
            "match": {
              "location": "stepDefinitions.FlightStepDefs.clicksOnPurchaseFlightButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 11,
            "name": "user validates purchase details",
            "match": {
              "location": "stepDefinitions.FlightStepDefs.userValidatesPurchaseDetails()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@Sanity"
          }
        ]
      },
      {
        "start_timestamp": "2021-04-20T07:35:31.083Z",
        "before": [
          {
            "result": {
              "duration": 6154000000,
              "status": "passed"
            },
            "match": {
              "location": "stepDefinitions.FlightStepDefs.setUp()"
            }
          }
        ],
        "line": 15,
        "name": "Verify flight booking for users",
        "description": "",
        "id": "this-feature-will-validate-flight-booking-functionality;verify-flight-booking-for-users;;3",
        "after": [
          {
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/JPEG",
                "name": "failedScn"
              }
            ],
            "result": {
              "duration": 1086000000,
              "status": "passed"
            },
            "match": {
              "location": "stepDefinitions.FlightStepDefs.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "line": 5,
            "name": "User navigates to flight booking application",
            "match": {
              "location": "stepDefinitions.FlightStepDefs.user_navigates_to_flight_booking_application()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 359000000,
              "status": "passed"
            },
            "line": 6,
            "name": "user selects \"Boston\" and \"Berlin\" city",
            "match": {
              "arguments": [
                {
                  "val": "\"Boston\"",
                  "offset": 13
                },
                {
                  "val": "\"Berlin\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.FlightStepDefs.userFromAndToCity(java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 471000000,
              "status": "passed"
            },
            "line": 7,
            "name": "click on Find Flights button",
            "match": {
              "location": "stepDefinitions.FlightStepDefs.clickOnFindFlightsButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 66000000,
              "status": "passed"
            },
            "line": 8,
            "name": "user choose flight to reserve ticket",
            "match": {
              "location": "stepDefinitions.FlightStepDefs.userChooseFlightToReserveTicket()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator \u0027By.id: inputName\u0027 (tried for 15 second(s) with 500 milliseconds interval)\r\n\tat org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:95)\r\n\tat org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:272)\r\n\tat Pages.UserDetailsPage.enterFirstName(UserDetailsPage.java:50)\r\n\tat stepDefinitions.FlightStepDefs.userEntersAllPassengerDetailsAndClicksOnPurchaseFlightButton(FlightStepDefs.java:79)\r\n\tat ✽.user enters all passenger details(file:///C:/FlightProjectAutomation/FlightBooking/src/test/resources/features/Flight.feature:9)\r\nCaused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"#inputName\"}\n  (Session info: chrome\u003d90.0.4430.72)\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.141.0\u0027, revision: \u00272ecb7d9a\u0027, time: \u00272018-10-31T20:09:30\u0027\nSystem info: host: \u0027DESKTOP-UM24P9K\u0027, ip: \u0027192.168.0.5\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_271\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 90.0.4430.72, chrome: {chromedriverVersion: 89.0.4389.23 (61b08ee2c5002..., userDataDir: C:\\Users\\Admin\\AppData\\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:51656}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}\nSession ID: 90d4e3b6eaa38b50a0bb309c5a21e435\n*** Element info: {Using\u003did, value\u003dinputName}\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:372)\r\n\tat org.openqa.selenium.By$ById.findElement(By.java:188)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)\r\n\tat org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)\r\n\tat org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)\r\n\tat com.sun.proxy.$Proxy21.isDisplayed(Unknown Source)\r\n\tat org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:314)\r\n\tat org.openqa.selenium.support.ui.ExpectedConditions.access$000(ExpectedConditions.java:43)\r\n\tat org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:300)\r\n\tat org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:297)\r\n\tat org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:249)\r\n\tat Pages.UserDetailsPage.enterFirstName(UserDetailsPage.java:50)\r\n\tat stepDefinitions.FlightStepDefs.userEntersAllPassengerDetailsAndClicksOnPurchaseFlightButton(FlightStepDefs.java:79)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat io.cucumber.java.Invoker.doInvoke(Invoker.java:66)\r\n\tat io.cucumber.java.Invoker.invoke(Invoker.java:24)\r\n\tat io.cucumber.java.AbstractGlueDefinition.invokeMethod(AbstractGlueDefinition.java:47)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:29)\r\n\tat io.cucumber.core.runner.CoreStepDefinition.execute(CoreStepDefinition.java:66)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.ExecutionMode$1.execute(ExecutionMode.java:10)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:92)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:64)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:51)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:104)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:71)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:151)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:135)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:27)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:199)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:90)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:234)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:220)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:53)\r\n",
              "duration": 30608000000,
              "status": "failed"
            },
            "line": 9,
            "name": "user enters all passenger details",
            "match": {
              "location": "stepDefinitions.FlightStepDefs.userEntersAllPassengerDetailsAndClicksOnPurchaseFlightButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15000000,
              "status": "skipped"
            },
            "line": 10,
            "name": "clicks on Purchase Flight button",
            "match": {
              "location": "stepDefinitions.FlightStepDefs.clicksOnPurchaseFlightButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 11,
            "name": "user validates purchase details",
            "match": {
              "location": "stepDefinitions.FlightStepDefs.userValidatesPurchaseDetails()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@Sanity"
          }
        ]
      },
      {
        "start_timestamp": "2021-04-20T07:36:09.859Z",
        "before": [
          {
            "result": {
              "duration": 6336000000,
              "status": "passed"
            },
            "match": {
              "location": "stepDefinitions.FlightStepDefs.setUp()"
            }
          }
        ],
        "line": 23,
        "name": "Verify departure and destination dropdowns have all expected cities",
        "description": "",
        "id": "this-feature-will-validate-flight-booking-functionality;verify-departure-and-destination-dropdowns-have-all-expected-cities;;2",
        "after": [
          {
            "result": {
              "duration": 658000000,
              "status": "passed"
            },
            "match": {
              "location": "stepDefinitions.FlightStepDefs.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "line": 19,
            "name": "User navigates to flight booking application",
            "match": {
              "location": "stepDefinitions.FlightStepDefs.user_navigates_to_flight_booking_application()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 379000000,
              "status": "passed"
            },
            "line": 20,
            "name": "User validates \"Paris,Philadelphia,Boston,Portland,San Diego,Mexico City,São Paolo\" and \"Buenos Aires,Rome,London,Berlin,New York,Dublin,Cairo\" cities available",
            "match": {
              "arguments": [
                {
                  "val": "\"Paris,Philadelphia,Boston,Portland,San Diego,Mexico City,São Paolo\"",
                  "offset": 15
                },
                {
                  "val": "\"Buenos Aires,Rome,London,Berlin,New York,Dublin,Cairo\"",
                  "offset": 88
                }
              ],
              "location": "stepDefinitions.FlightStepDefs.userValidatesAndCitiesAvailable(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@Sanity"
          }
        ]
      },
      {
        "start_timestamp": "2021-04-20T07:36:17.243Z",
        "before": [
          {
            "result": {
              "duration": 7815000000,
              "status": "passed"
            },
            "match": {
              "location": "stepDefinitions.FlightStepDefs.setUp()"
            }
          }
        ],
        "line": 33,
        "name": "Verify flight header message is displayed in FLights page",
        "description": "",
        "id": "this-feature-will-validate-flight-booking-functionality;verify-flight-header-message-is-displayed-in-flights-page;;2",
        "after": [
          {
            "result": {
              "duration": 3434000000,
              "status": "passed"
            },
            "match": {
              "location": "stepDefinitions.FlightStepDefs.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "line": 27,
            "name": "User navigates to flight booking application",
            "match": {
              "location": "stepDefinitions.FlightStepDefs.user_navigates_to_flight_booking_application()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 319000000,
              "status": "passed"
            },
            "line": 28,
            "name": "user selects \"Paris\" and \"Rome\" city",
            "match": {
              "arguments": [
                {
                  "val": "\"Paris\"",
                  "offset": 13
                },
                {
                  "val": "\"Rome\"",
                  "offset": 25
                }
              ],
              "location": "stepDefinitions.FlightStepDefs.userFromAndToCity(java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 600000000,
              "status": "passed"
            },
            "line": 29,
            "name": "user choose flight to reserve ticket",
            "match": {
              "location": "stepDefinitions.FlightStepDefs.userChooseFlightToReserveTicket()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 23000000,
              "status": "passed"
            },
            "line": 30,
            "name": "user validates flight header message \"Paris\" and \"Rome\" city",
            "match": {
              "arguments": [
                {
                  "val": "\"Paris\"",
                  "offset": 37
                },
                {
                  "val": "\"Rome\"",
                  "offset": 49
                }
              ],
              "location": "stepDefinitions.FlightStepDefs.userValidatesFlightHeaderMessageAndCity(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@Sanity"
          }
        ]
      },
      {
        "start_timestamp": "2021-04-20T07:36:29.444Z",
        "before": [
          {
            "result": {
              "duration": 8275000000,
              "status": "passed"
            },
            "match": {
              "location": "stepDefinitions.FlightStepDefs.setUp()"
            }
          }
        ],
        "line": 34,
        "name": "Verify flight header message is displayed in FLights page",
        "description": "",
        "id": "this-feature-will-validate-flight-booking-functionality;verify-flight-header-message-is-displayed-in-flights-page;;3",
        "after": [
          {
            "result": {
              "duration": 1770000000,
              "status": "passed"
            },
            "match": {
              "location": "stepDefinitions.FlightStepDefs.tearDown(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "line": 27,
            "name": "User navigates to flight booking application",
            "match": {
              "location": "stepDefinitions.FlightStepDefs.user_navigates_to_flight_booking_application()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 390000000,
              "status": "passed"
            },
            "line": 28,
            "name": "user selects \"Boston\" and \"Berlin\" city",
            "match": {
              "arguments": [
                {
                  "val": "\"Boston\"",
                  "offset": 13
                },
                {
                  "val": "\"Berlin\"",
                  "offset": 26
                }
              ],
              "location": "stepDefinitions.FlightStepDefs.userFromAndToCity(java.lang.String,java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 555000000,
              "status": "passed"
            },
            "line": 29,
            "name": "user choose flight to reserve ticket",
            "match": {
              "location": "stepDefinitions.FlightStepDefs.userChooseFlightToReserveTicket()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5676000000,
              "status": "passed"
            },
            "line": 30,
            "name": "user validates flight header message \"Boston\" and \"Berlin\" city",
            "match": {
              "arguments": [
                {
                  "val": "\"Boston\"",
                  "offset": 37
                },
                {
                  "val": "\"Berlin\"",
                  "offset": 50
                }
              ],
              "location": "stepDefinitions.FlightStepDefs.userValidatesFlightHeaderMessageAndCity(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@Sanity"
          }
        ]
      }
    ],
    "name": "This feature will validate flight booking functionality",
    "description": "",
    "id": "this-feature-will-validate-flight-booking-functionality",
    "keyword": "Feature",
    "uri": "file:src/test/resources/features/Flight.feature",
    "tags": []
  }
]